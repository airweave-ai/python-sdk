# This file was auto-generated by Fern from our API Definition.

import typing
import urllib.parse
from json.decoder import JSONDecodeError

import httpx
import pydantic

from ...core.api_error import ApiError
from ...core.remove_none_from_headers import remove_none_from_headers


class HealthClient:
    def __init__(self, *, environment: str, api_key: typing.Optional[str] = None):
        self._environment = environment
        self.api_key = api_key

    def health_check(self) -> typing.Dict[str, str]:
        _response = httpx.request(
            "GET",
            urllib.parse.urljoin(f"{self._environment}/", "health"),
            headers=remove_none_from_headers({"x-api-key": self.api_key}),
        )
        if 200 <= _response.status_code < 300:
            return pydantic.parse_obj_as(typing.Dict[str, str], _response.json())  # type: ignore
        try:
            _response_json = _response.json()
        except JSONDecodeError:
            raise ApiError(status_code=_response.status_code, body=_response.text)
        raise ApiError(status_code=_response.status_code, body=_response_json)
