# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime


class APIKeyWithPlainKey(pydantic.BaseModel):
    """
    Schema for APIKey with plain key.
    """

    id: str
    key_prefix: str
    organization: typing.Optional[str]
    created_at: dt.datetime
    modified_at: dt.datetime
    last_used_date: typing.Optional[dt.datetime]
    expiration_date: dt.datetime
    created_by_email: str
    modified_by_email: str
    plain_key: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
