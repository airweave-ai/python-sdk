# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ConnectionStatus(str, enum.Enum):
    """
    Connection status enum.
    """

    ACTIVE = "active"
    INACTIVE = "inactive"
    ERROR = "error"

    def visit(
        self,
        active: typing.Callable[[], T_Result],
        inactive: typing.Callable[[], T_Result],
        error: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ConnectionStatus.ACTIVE:
            return active()
        if self is ConnectionStatus.INACTIVE:
            return inactive()
        if self is ConnectionStatus.ERROR:
            return error()
